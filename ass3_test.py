import unittest
import ass3_src
import numpy as np

class TestMyModule(unittest.TestCase):

    def test_clean_text(self):
        tw = ass3_src.TweetProcessor()
        x = "Zlatan@Ibra is a super player who has played for great teams such as ManU!, Juve!, AC and @Barca"
        result = tw.clean_text(x)
        expected_result = 'zlatan ibra is a super player who has played for great teams such as manu   juve   ac and  barca'
        self.assertEqual(result, expected_result)


    def test_tokenize_text(self):
    	tw = ass3_src.TweetProcessor()
    	x_clean = "zlatan ibra is a super player who has played for great teams such as manu   juve   ac and  barca"
    	result = tw.tokenize_text(x_clean)
    	expected_result = ['zlatan','ibra','super','player','played','great','teams','manu','juve','ac','barca']
    	self.assertEqual(result, expected_result)

    def test_replace_token_with_index(self):
        tw = ass3_src.TweetProcessor()
        token_tweet = ['zlatan','ibra','super','player','played','great','teams','manu','juve','ac','barca']
        result = tw.token_to_index(token_tweet)
        expected_result = [np.array([-0.26573 , -0.4672  , -1.0499  , -0.39765 , -1.1275  , -0.25388 ,
       -1.21    ,  0.292   , -0.59725 , -1.2101  ,  0.97224 ,  0.17288 ,
       -1.9852  ,  0.17557 ,  0.52949 ,  1.188   , -0.66671 , -0.099483,
       -1.0681  ,  0.14484 , -0.3583  ,  1.0465  , -0.31022 , -1.4888  ,
       -0.30817 ], dtype='float32'), np.array([-0.12703  , -0.019223 , -0.37241  , -0.24812  , -1.4281   ,
       -0.26629  , -1.175    ,  0.86509  , -0.10605  , -0.96151  ,
        1.2473   ,  0.048992 , -1.3516   , -0.25609  ,  0.8832   ,
        0.40975  , -1.1545   , -0.50556  , -0.83051  ,  0.29249  ,
       -0.45193  ,  0.96952  ,  0.0067525, -1.0212   , -1.2247   ],
      dtype='float32'), np.array([ 0.17051 , -0.80732 ,  0.12368 , -1.1967  ,  0.66878 ,  1.4881  ,
        0.73193 ,  1.6262  , -0.63642 , -1.0368  , -0.010225, -0.55161 ,
       -3.2146  , -0.46283 , -0.011274, -0.064021,  0.27719 , -0.17081 ,
       -1.3197  ,  0.084521, -0.75476 ,  0.034039, -0.089051,  0.26804 ,
        0.086252], dtype='float32'), np.array([ 0.90556 ,  0.18827 ,  0.004892, -1.5553  ,  0.52246 ,  0.11616 ,
        0.33141 ,  0.48961 ,  0.28151 , -0.98138 ,  0.6413  ,  0.92151 ,
       -3.8385  ,  0.26918 ,  0.79951 ,  0.046473,  0.021384, -0.86366 ,
        0.17847 ,  0.22807 , -0.66675 ,  0.89142 ,  0.19239 , -0.87511 ,
       -1.1589  ], dtype='float32'), np.array([ 0.52887 ,  0.5997  ,  1.0502  , -1.0242  , -0.86072 ,  0.40999 ,
        0.84075 , -0.12928 , -0.71412 , -1.0658  ,  0.1933  ,  1.5332  ,
       -4.1827  ,  0.2933  ,  0.84237 ,  0.34721 ,  0.66849 , -0.08207 ,
        0.41609 , -0.21356 , -0.5491  ,  1.082   ,  0.68583 , -0.75203 ,
        0.082578], dtype='float32'), np.array([-8.4229e-01,  3.6512e-01, -3.8841e-01, -4.6118e-01,  2.4301e-01,
        3.2412e-01,  1.9009e+00, -2.2630e-01, -3.1335e-01, -1.0970e+00,
       -4.1494e-03,  6.2074e-01, -5.0964e+00,  6.7418e-01,  5.0080e-01,
       -6.2119e-01,  5.1765e-01, -4.4122e-01, -1.4364e-01,  1.9130e-01,
       -7.4608e-01, -2.5903e-01, -7.8010e-01,  1.1030e-01, -2.7928e-01],
      dtype='float32'), np.array([ 1.1619e+00,  1.1112e+00, -6.3720e-01, -1.9240e+00,  3.4611e-02,
        7.5957e-01,  3.8470e-02, -1.0669e+00, -2.9597e-01, -7.1527e-01,
        1.2779e-01,  4.3130e-01, -3.9370e+00,  1.2251e+00,  8.3133e-01,
        1.0608e-01, -2.4198e-01, -9.5151e-01,  3.7402e-01,  2.3313e-01,
       -1.0174e+00,  6.0809e-01,  3.7572e-03, -1.0246e+00, -5.3500e-01],
      dtype='float32'), np.array([ 0.35456 , -0.12877 ,  0.59085 , -0.45756 , -0.75962 , -0.29754 ,
       -0.90641 ,  1.1523  , -0.020089, -1.5311  , -0.48103 , -1.2128  ,
       -1.9116  , -0.62462 ,  0.75639 , -0.34132 , -0.92316 , -0.4982  ,
       -0.52599 ,  0.34955 ,  0.2349  ,  0.85018 , -0.097898, -0.059732,
       -0.35308 ], dtype='float32'), np.array([-0.84201 ,  0.25681 , -0.30083 , -1.6859  , -1.9542  , -0.82669 ,
       -0.60228 ,  1.6315  ,  0.26096 ,  0.26518 ,  0.80417 , -0.70866 ,
       -1.6578  ,  0.80595 ,  0.43618 ,  0.49707 , -1.5091  , -0.35604 ,
       -0.93616 , -0.22953 , -1.2292  ,  1.0802  , -0.010675, -1.3335  ,
       -0.68065 ], dtype='float32'), np.array([ 0.076599,  0.16315 , -0.12973 , -0.43918 , -0.61459 ,  0.72907 ,
       -0.88725 ,  0.97759 ,  1.0753  ,  0.5318  ,  0.45955 ,  0.04409 ,
       -2.7055  , -0.086473,  0.44504 ,  0.01636 , -0.57015 , -0.1867  ,
       -0.90546 ,  0.67248 , -1.0158  , -0.10902 ,  0.49783 , -0.82264 ,
       -0.40085 ], dtype='float32'), np.array([ 0.54886 ,  0.58848 , -0.58356 , -1.3626  , -1.453   ,  0.45453 ,
       -0.67105 ,  2.1134  , -0.060388, -0.11992 ,  0.56318 ,  0.26348 ,
       -2.2231  ,  0.64914 ,  1.0424  ,  0.39923 , -1.0181  , -0.8661  ,
       -0.60676 ,  0.30974 , -1.2611  ,  1.156   , -0.11795 , -0.75563 ,
       -0.38878 ], dtype='float32')]

    def test_pad(self):
        tw = ass3_src.TweetProcessor()
        x_ind = [np.array([-0.26573 , -0.4672  , -1.0499  , -0.39765 , -1.1275  , -0.25388 ,
       -1.21    ,  0.292   , -0.59725 , -1.2101  ,  0.97224 ,  0.17288 ,
       -1.9852  ,  0.17557 ,  0.52949 ,  1.188   , -0.66671 , -0.099483,
       -1.0681  ,  0.14484 , -0.3583  ,  1.0465  , -0.31022 , -1.4888  ,
       -0.30817 ], dtype='float32'), np.array([-0.12703  , -0.019223 , -0.37241  , -0.24812  , -1.4281   ,
       -0.26629  , -1.175    ,  0.86509  , -0.10605  , -0.96151  ,
        1.2473   ,  0.048992 , -1.3516   , -0.25609  ,  0.8832   ,
        0.40975  , -1.1545   , -0.50556  , -0.83051  ,  0.29249  ,
       -0.45193  ,  0.96952  ,  0.0067525, -1.0212   , -1.2247   ],
      dtype='float32'), np.array([ 0.17051 , -0.80732 ,  0.12368 , -1.1967  ,  0.66878 ,  1.4881  ,
        0.73193 ,  1.6262  , -0.63642 , -1.0368  , -0.010225, -0.55161 ,
       -3.2146  , -0.46283 , -0.011274, -0.064021,  0.27719 , -0.17081 ,
       -1.3197  ,  0.084521, -0.75476 ,  0.034039, -0.089051,  0.26804 ,
        0.086252], dtype='float32'), np.array([ 0.90556 ,  0.18827 ,  0.004892, -1.5553  ,  0.52246 ,  0.11616 ,
        0.33141 ,  0.48961 ,  0.28151 , -0.98138 ,  0.6413  ,  0.92151 ,
       -3.8385  ,  0.26918 ,  0.79951 ,  0.046473,  0.021384, -0.86366 ,
        0.17847 ,  0.22807 , -0.66675 ,  0.89142 ,  0.19239 , -0.87511 ,
       -1.1589  ], dtype='float32'), np.array([ 0.52887 ,  0.5997  ,  1.0502  , -1.0242  , -0.86072 ,  0.40999 ,
        0.84075 , -0.12928 , -0.71412 , -1.0658  ,  0.1933  ,  1.5332  ,
       -4.1827  ,  0.2933  ,  0.84237 ,  0.34721 ,  0.66849 , -0.08207 ,
        0.41609 , -0.21356 , -0.5491  ,  1.082   ,  0.68583 , -0.75203 ,
        0.082578], dtype='float32'), np.array([-8.4229e-01,  3.6512e-01, -3.8841e-01, -4.6118e-01,  2.4301e-01,
        3.2412e-01,  1.9009e+00, -2.2630e-01, -3.1335e-01, -1.0970e+00,
       -4.1494e-03,  6.2074e-01, -5.0964e+00,  6.7418e-01,  5.0080e-01,
       -6.2119e-01,  5.1765e-01, -4.4122e-01, -1.4364e-01,  1.9130e-01,
       -7.4608e-01, -2.5903e-01, -7.8010e-01,  1.1030e-01, -2.7928e-01],
      dtype='float32'), np.array([ 1.1619e+00,  1.1112e+00, -6.3720e-01, -1.9240e+00,  3.4611e-02,
        7.5957e-01,  3.8470e-02, -1.0669e+00, -2.9597e-01, -7.1527e-01,
        1.2779e-01,  4.3130e-01, -3.9370e+00,  1.2251e+00,  8.3133e-01,
        1.0608e-01, -2.4198e-01, -9.5151e-01,  3.7402e-01,  2.3313e-01,
       -1.0174e+00,  6.0809e-01,  3.7572e-03, -1.0246e+00, -5.3500e-01],
      dtype='float32'), np.array([ 0.35456 , -0.12877 ,  0.59085 , -0.45756 , -0.75962 , -0.29754 ,
       -0.90641 ,  1.1523  , -0.020089, -1.5311  , -0.48103 , -1.2128  ,
       -1.9116  , -0.62462 ,  0.75639 , -0.34132 , -0.92316 , -0.4982  ,
       -0.52599 ,  0.34955 ,  0.2349  ,  0.85018 , -0.097898, -0.059732,
       -0.35308 ], dtype='float32'), np.array([-0.84201 ,  0.25681 , -0.30083 , -1.6859  , -1.9542  , -0.82669 ,
       -0.60228 ,  1.6315  ,  0.26096 ,  0.26518 ,  0.80417 , -0.70866 ,
       -1.6578  ,  0.80595 ,  0.43618 ,  0.49707 , -1.5091  , -0.35604 ,
       -0.93616 , -0.22953 , -1.2292  ,  1.0802  , -0.010675, -1.3335  ,
       -0.68065 ], dtype='float32'), np.array([ 0.076599,  0.16315 , -0.12973 , -0.43918 , -0.61459 ,  0.72907 ,
       -0.88725 ,  0.97759 ,  1.0753  ,  0.5318  ,  0.45955 ,  0.04409 ,
       -2.7055  , -0.086473,  0.44504 ,  0.01636 , -0.57015 , -0.1867  ,
       -0.90546 ,  0.67248 , -1.0158  , -0.10902 ,  0.49783 , -0.82264 ,
       -0.40085 ], dtype='float32'), np.array([ 0.54886 ,  0.58848 , -0.58356 , -1.3626  , -1.453   ,  0.45453 ,
       -0.67105 ,  2.1134  , -0.060388, -0.11992 ,  0.56318 ,  0.26348 ,
       -2.2231  ,  0.64914 ,  1.0424  ,  0.39923 , -1.0181  , -0.8661  ,
       -0.60676 ,  0.30974 , -1.2611  ,  1.156   , -0.11795 , -0.75563 ,
       -0.38878 ], dtype='float32')]
        
        result = tw.pad_sequence(x_ind)
        
        expected_result =     [np.array([-0.26573 , -0.4672  , -1.0499  , -0.39765 , -1.1275  , -0.25388 ,
       -1.21    ,  0.292   , -0.59725 , -1.2101  ,  0.97224 ,  0.17288 ,
       -1.9852  ,  0.17557 ,  0.52949 ,  1.188   , -0.66671 , -0.099483,
       -1.0681  ,  0.14484 , -0.3583  ,  1.0465  , -0.31022 , -1.4888  ,
       -0.30817 ], dtype='float32'), np.array([-0.12703  , -0.019223 , -0.37241  , -0.24812  , -1.4281   ,
       -0.26629  , -1.175    ,  0.86509  , -0.10605  , -0.96151  ,
        1.2473   ,  0.048992 , -1.3516   , -0.25609  ,  0.8832   ,
        0.40975  , -1.1545   , -0.50556  , -0.83051  ,  0.29249  ,
       -0.45193  ,  0.96952  ,  0.0067525, -1.0212   , -1.2247   ],
      dtype='float32'), np.array([ 0.17051 , -0.80732 ,  0.12368 , -1.1967  ,  0.66878 ,  1.4881  ,
        0.73193 ,  1.6262  , -0.63642 , -1.0368  , -0.010225, -0.55161 ,
       -3.2146  , -0.46283 , -0.011274, -0.064021,  0.27719 , -0.17081 ,
       -1.3197  ,  0.084521, -0.75476 ,  0.034039, -0.089051,  0.26804 ,
        0.086252], dtype='float32'), np.array([ 0.90556 ,  0.18827 ,  0.004892, -1.5553  ,  0.52246 ,  0.11616 ,
        0.33141 ,  0.48961 ,  0.28151 , -0.98138 ,  0.6413  ,  0.92151 ,
       -3.8385  ,  0.26918 ,  0.79951 ,  0.046473,  0.021384, -0.86366 ,
        0.17847 ,  0.22807 , -0.66675 ,  0.89142 ,  0.19239 , -0.87511 ,
       -1.1589  ], dtype='float32'), np.array([ 0.52887 ,  0.5997  ,  1.0502  , -1.0242  , -0.86072 ,  0.40999 ,
        0.84075 , -0.12928 , -0.71412 , -1.0658  ,  0.1933  ,  1.5332  ,
       -4.1827  ,  0.2933  ,  0.84237 ,  0.34721 ,  0.66849 , -0.08207 ,
        0.41609 , -0.21356 , -0.5491  ,  1.082   ,  0.68583 , -0.75203 ,
        0.082578], dtype='float32'), np.array([-8.4229e-01,  3.6512e-01, -3.8841e-01, -4.6118e-01,  2.4301e-01,
        3.2412e-01,  1.9009e+00, -2.2630e-01, -3.1335e-01, -1.0970e+00,
       -4.1494e-03,  6.2074e-01, -5.0964e+00,  6.7418e-01,  5.0080e-01,
       -6.2119e-01,  5.1765e-01, -4.4122e-01, -1.4364e-01,  1.9130e-01,
       -7.4608e-01, -2.5903e-01, -7.8010e-01,  1.1030e-01, -2.7928e-01],
      dtype='float32'), np.array([ 1.1619e+00,  1.1112e+00, -6.3720e-01, -1.9240e+00,  3.4611e-02,
        7.5957e-01,  3.8470e-02, -1.0669e+00, -2.9597e-01, -7.1527e-01,
        1.2779e-01,  4.3130e-01, -3.9370e+00,  1.2251e+00,  8.3133e-01,
        1.0608e-01, -2.4198e-01, -9.5151e-01,  3.7402e-01,  2.3313e-01,
       -1.0174e+00,  6.0809e-01,  3.7572e-03, -1.0246e+00, -5.3500e-01],
      dtype='float32'), np.array([ 0.35456 , -0.12877 ,  0.59085 , -0.45756 , -0.75962 , -0.29754 ,
       -0.90641 ,  1.1523  , -0.020089, -1.5311  , -0.48103 , -1.2128  ,
       -1.9116  , -0.62462 ,  0.75639 , -0.34132 , -0.92316 , -0.4982  ,
       -0.52599 ,  0.34955 ,  0.2349  ,  0.85018 , -0.097898, -0.059732,
       -0.35308 ], dtype='float32'), np.array([-0.84201 ,  0.25681 , -0.30083 , -1.6859  , -1.9542  , -0.82669 ,
       -0.60228 ,  1.6315  ,  0.26096 ,  0.26518 ,  0.80417 , -0.70866 ,
       -1.6578  ,  0.80595 ,  0.43618 ,  0.49707 , -1.5091  , -0.35604 ,
       -0.93616 , -0.22953 , -1.2292  ,  1.0802  , -0.010675, -1.3335  ,
       -0.68065 ], dtype='float32'), np.array([ 0.076599,  0.16315 , -0.12973 , -0.43918 , -0.61459 ,  0.72907 ,
       -0.88725 ,  0.97759 ,  1.0753  ,  0.5318  ,  0.45955 ,  0.04409 ,
       -2.7055  , -0.086473,  0.44504 ,  0.01636 , -0.57015 , -0.1867  ,
       -0.90546 ,  0.67248 , -1.0158  , -0.10902 ,  0.49783 , -0.82264 ,
       -0.40085 ], dtype='float32'), np.array([ 0.54886 ,  0.58848 , -0.58356 , -1.3626  , -1.453   ,  0.45453 ,
       -0.67105 ,  2.1134  , -0.060388, -0.11992 ,  0.56318 ,  0.26348 ,
       -2.2231  ,  0.64914 ,  1.0424  ,  0.39923 , -1.0181  , -0.8661  ,
       -0.60676 ,  0.30974 , -1.2611  ,  1.156   , -0.11795 , -0.75563 ,
       -0.38878 ], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32'), np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype='float32')]













        
    